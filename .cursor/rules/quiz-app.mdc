---
description: Quiz-App 项目开发规则和笔记
globs: ["app-ideas/Quiz-App/**/*"]
alwaysApply: true
---

# Quiz-App 项目开发笔记

## HTML



## CSS

## JS

## API 编码类型选择

在 Quiz-App 项目的 JavaScript 开发中，将使用 **默认编码**（HTML Codes）：

- **API 参数**：不指定 encode 参数，使用默认编码
- **编码格式**：HTML 实体编码（如 `&quot;` 表示引号，`&#039;` 表示单引号）
- **使用原因**：项目核心功能是调用 Open Trivia Database API，默认编码最稳定
- **解码方法**：使用 JavaScript 的 HTML 解码函数

### 示例代码
```javascript
// 浏览器前端 fetch 调用 API（使用默认编码）
const apiUrl = `https://opentdb.com/api.php?amount=10`;

async function fetchQuizData() {
    try {
        const response = await fetch(apiUrl);
        const data = await response.json();
        
        // API 返回的数据是 HTML 编码格式
        if (data.results && data.results.length > 0) {
            data.results.forEach(question => {
                // 解码问题和答案
                question.question = decodeHTML(question.question);
                question.correct_answer = decodeHTML(question.correct_answer);
                question.incorrect_answers = question.incorrect_answers.map(answer => 
                    decodeHTML(answer)
                );
            });
        }
        
        return data;
    } catch (error) {
        console.error('API 调用失败:', error);
        return null;
    }
}

// HTML 解码函数
function decodeHTML(html) {
    const txt = document.createElement('textarea');
    txt.innerHTML = html;
    return txt.value;
}
```

### 为什么选择默认编码？
1. **最稳定** - API 的默认编码方式，兼容性最好
2. **浏览器原生支持** - 可以直接使用 DOM 方法解码
3. **无需额外参数** - 简化 API 调用 URL

